name: Altseed

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  windows:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
    - name: Update Submodules
      run: |
        git submodule update --init --recursive
    - name: Cache Core
      uses: actions/cache@v1
      id: cache-core
      env:
        cache-name: cache-core
      with:
        path: Core/build
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('Core/core/**') }}
    - name: Build CMake
      if: steps.cache-core.outputs.cache-hit != 'true'
      run: |
        cd Core
        mkdir build
        cd build
        cmake .. -A x64
        cmake --build . --config Release
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.0.103
    - name: Install dependencies
      run: |
        dotnet restore TestForMacLinux/TestForMacLinux.csproj
        dotnet restore Tool/FontGenerator/FontGenerator.csproj
    - name: Build
      run: |
        dotnet build TestForMacLinux/TestForMacLinux.csproj --configuration Release --no-restore
        dotnet build Tool/FontGenerator/FontGenerator.csproj --configuration Release --no-restore
    - name: Test
      continue-on-error: true
      run: dotnet test Altseed2.sln --configuration Release --no-restore --verbosity normal
    - name: Upload artifact
      continue-on-error: true
      uses: actions/upload-artifact@v1.0.0
      with:
        name: test-windows
        path: Build/netcoreapp3.0
  
  linux:

    runs-on: ubuntu-18.04

    steps:
    - uses: actions/checkout@v2
    - name: Update Submodules
      run: |
        git submodule update --init --recursive
    - name: Cache Core
      uses: actions/cache@v1
      id: cache-core
      env:
        cache-name: cache-core
      with:
        path: Core/build
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('Core/core/**') }}
    - name: Build CMake
      if: steps.cache-core.outputs.cache-hit != 'true'
      run: |
        wget -qO - http://packages.lunarg.com/lunarg-signing-key-pub.asc | sudo apt-key add -
        sudo wget -qO /etc/apt/sources.list.d/lunarg-vulkan-1.2.135-bionic.list http://packages.lunarg.com/vulkan/1.2.135/lunarg-vulkan-1.2.135-bionic.list
        sudo apt update
        sudo apt install vulkan-sdk
        sudo apt -y install libx11-dev libxrandr-dev libxi-dev libxinerama-dev libxcursor-dev libudev-dev
        sudo apt -y install libssl-dev
        sudo apt -y install libglu1-mesa-dev mesa-common-dev
        sudo apt -y install libpulse-dev
        sudo apt -y install libgtk-3-dev
        cd Core
        mkdir build
        cd build
        cmake ..
        cmake --build . --config Release
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.0.103
    - name: Install dependencies
      run: |
        dotnet restore TestForMacLinux/TestForMacLinux.csproj
        dotnet restore Tool/FontGenerator/FontGenerator.csproj
    - name: Build
      run: |
        dotnet build TestForMacLinux/TestForMacLinux.csproj --configuration Release --no-restore
        dotnet build Tool/FontGenerator/FontGenerator.csproj --configuration Release --no-restore
    - name: Test
      continue-on-error: true
      run: |
        cd Build/netcoreapp3.0
        mv libAltseed_Core.so libAltseed_Core
        dotnet TestForMacLinux.dll
    - name: Upload artifact
      continue-on-error: true
      uses: actions/upload-artifact@v1.0.0
      with:
        name: test-linux
        path: Build/netcoreapp3.0
        
  macOS:

    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v2
    - name: Update Submodules
      run: |
        git submodule update --init --recursive
    - name: Cache Core
      uses: actions/cache@v1
      id: cache-core
      env:
        cache-name: cache-core
      with:
        path: Core/build
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('Core/core/**') }}
    - name: Build CMake
      if: steps.cache-core.outputs.cache-hit != 'true'
      run: |
        cd Core
        mkdir build
        cd build
        cmake .. -G "Xcode" 
        cmake --build . --config Release
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.0.103
    - name: Install dependencies
      run: |
        dotnet restore TestForMacLinux/TestForMacLinux.csproj
        dotnet restore Tool/FontGenerator/FontGenerator.csproj
    - name: Build
      run: |
        dotnet build TestForMacLinux/TestForMacLinux.csproj --configuration Release --no-restore
        dotnet build Tool/FontGenerator/FontGenerator.csproj --configuration Release --no-restore
    - name: Test
      continue-on-error: true
      run: |
        cd Build/netcoreapp3.0
        dotnet TestForMacLinux.dll
    - name: Upload artifact
      continue-on-error: true
      uses: actions/upload-artifact@v1.0.0
      with:
        name: test-mac
        path: Build/netcoreapp3.0

  merge:
    runs-on: ubuntu-18.04
    needs: [windows, linux, macOS]
    steps:
      - name: Download Windows
        uses: actions/download-artifact@v1
        with:
          name: test-windows

      - name: Download macOS
        uses: actions/download-artifact@v1
        with:
          name: test-mac

      - name: Download Linux
        uses: actions/download-artifact@v1
        with:
          name: test-linux

      - name: Merge
        run: |
          mkdir bin
          cp test-windows/Altseed2.dll bin/
          cp test-windows/Altseed_Core.dll bin/
          cp test-mac/libAltseed_Core.dylib bin/
          cp test-linux/libAltseed_Core bin/
        
      - name: Upload artifact
        uses: actions/upload-artifact@v1
        with:
          name: bin
          path: bin
  make_nuget:
    runs-on: windows-latest
    needs: [merge]
    steps:
      - uses: actions/checkout@v2
      - name: Download bin
        uses: actions/download-artifact@v1
        with:
          name: bin
      
      - name: Make Nuget Package
        run: |
          wget https://dist.nuget.org/win-x86-commandline/latest/nuget.exe -O nuget.exe
          mkdir package/
          mv Nuget/* package/
          mv bin/* package/
          cd package
          ..\nuget.exe pack Altseed2.nuspec
        shell: powershell
        
      - name: Upload artifact
        uses: actions/upload-artifact@v1
        with:
          name: nuget
          path: package/**.nupkg
